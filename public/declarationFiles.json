[{"filePath":"DEMO/src/usr/README.md","declarations":[{"markdownContent":"## React component library with Material-UI components"}],"resourceType":"RESOURCE_IN_MARKDOWN_TYPE"},{"filePath":"DEMO/src/usr/data-display/Avatar.props.ts","declarations":[{"name":"AvatarTypes","properties":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"alt","propertyComment":"\n Used in combination with `src` or `srcSet` to provide an `alt` attribute for the rendered `img` element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"children","propertyComment":"\n \tUsed to render icon or text elements inside the Avatar if src is not set. This can be an element, or just a string.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"classes","propertyComment":"\n Override or extend the styles applied to the component.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"defLetter","propertyComment":"\n Default Letter\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"imgProps","propertyComment":"\n Attributes applied to the img element if the component is used to display an image. It can be used to listen for\n the loading error event.\n","externalProperties":"usr.a_lib.props.img.ImgTypes"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"src","propertyComment":"\n The `src` attribute for the `img` element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"variant","propertyComment":"\n The shape of the avatar.\n","propertyValue":null,"propertyValueVariants":[{"value":"circle"},{"value":"rounded"},{"value":"square"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/data-display/ListNavigation.comp.tsx","declarations":[{"componentName":"ListNavigation","wcdAnnotations":{},"externalProperties":"usr.data-display.ListNavigation.ListNavigationTypes","defaultProps":{"items":[{"url":"/page1","primaryText":"List Item 00001","secondaryText":"Subtext 00001","divider":true},{"url":"/page2","primaryText":"List Item 00002","secondaryText":"Subtext 00002"},{"url":"/page3","primaryText":"List Item 00003","secondaryText":"Subtext 00003"},{"url":"/page4","primaryText":"List Item 00004","secondaryText":"Subtext 00004"}],"itemsTextVariant":"body1"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/data-display/ListNavigation.props.ts","declarations":[{"name":"ListItemTypes","properties":[{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"childrenItems","propertyComment":"\n Nested list items\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"divider","propertyComment":"If true, a 1px light border is added to the bottom of the list item."}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"iconIndex","propertyComment":"\n The index value of the icon in the icons array property\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"primaryText","propertyComment":"The list item primary text"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"secondaryText","propertyComment":"The list item secondary text"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"selected"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"url","propertyComment":"The list item url."}}]}]},"children":[]},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"divider","propertyComment":"If true, a 1px light border is added to the bottom of the list item.","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"expanded","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"iconIndex","propertyComment":"\n The index value of the icon in the icons array property\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"primaryText","propertyComment":"The list item primary text","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"secondaryText","propertyComment":"The list item secondary text","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"selected","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"url","propertyComment":"The list item url.","propertyValue":null}}]},{"name":"ListNavigationTypes","properties":[{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"dense","propertyComment":"\n If true, compact vertical padding designed for keyboard and mouse input will be used.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"icons","propertyComment":"\n An icons elements array\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"items","propertyComment":"\n The list of actions.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"externalProperties":"usr.data-display.ListNavigation.ListItemTypes"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"itemsTextVariant","propertyComment":"Applies the theme typography styles to items primary text.","propertyValue":null,"propertyValueVariants":[{"value":"h1"},{"value":"h2"},{"value":"h3"},{"value":"h4"},{"value":"h5"},{"value":"h6"},{"value":"subtitle1"},{"value":"subtitle2"},{"value":"body1"},{"value":"body2"},{"value":"caption"},{"value":"button"},{"value":"overline"},{"value":"srOnly"},{"value":"inherit"}]}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onListNavigationItemClick","propertyComment":"\n\n"}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onListNavigationItemCollapseClick","propertyComment":"\n\n"}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onListNavigationItemExpandClick","propertyComment":"\n\n"}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/data-display/Avatar.comp.tsx","declarations":[{"componentName":"Avatar","wcdAnnotations":{"annotationComment":"\n _From Material UI documentation_\n\n # Avatar\n\n Avatars are found throughout material design with uses in everything from tables to dialog menus.\n\n ## Image avatars\n\n Image avatars can be created by passing standard `img` props `src` or `srcSet` to the component.\n\n ## Letter avatars\n\n Avatars containing simple characters can be created by passing a string as `children`.\n\n  ## Sizes\n\n  You can change the size of the avatar with the `height` and `width` CSS properties.\n\n  ## Icon avatars\n\n Icon avatars are created by passing an icon as `children`.\n\n ## Variants\n\n If you need square or rounded avatars, use the `variant` prop.\n\n ## Fallbacks\n\n If there is an error loading the avatar image, the component falls back to an alternative in the following order:\n\n - the provided children\n - the first letter of the `alt` text\n  - a generic avatar icon\n\n ## Grouped\n\n `AvatarGroup` renders its children as a stack.\n\n ## With badge\n\n"},"externalProperties":"usr.data-display.Avatar.AvatarTypes","defaultProps":{"variant":null}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/page/PageFrameWithDrawer.props.ts","declarations":[{"name":"PageFrameWithDrawerTypes","properties":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"actionArea","propertyComment":"\n The action area\n"},"children":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"propertyName":"actionAreaElement","propertyComment":"\n Sets the action area element.\n","componentName":"__PlaceHolder"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"centralArea","propertyComment":"\n The central area in the page\n"},"children":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"propertyName":"centralAreaElement","propertyComment":"\n Sets the central area element\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"centralAreaPadding","propertyComment":"\n Sets the padding of the central area\n","externalProperties":"usr.a_lib.props.padding.PaddingTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"centralAreaPalette","propertyComment":"\n Sets the custom background color of the central area\n"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.a_lib.props.color.ColorTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.a_lib.props.color.ColorTypes"}}]}]},{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"hiddenElements","propertyComment":"\n Hidden elements, useful for dialogs.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"leftArea","propertyComment":"\n\n"},"children":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"propertyName":"leftAreaElement","propertyComment":"\n The left area element\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"leftAreaPadding","propertyComment":"\n Sets the padding of the left area\n","externalProperties":"usr.a_lib.props.padding.PaddingTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"leftAreaPalette","propertyComment":"\n Sets the custom color of the left bar\n"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.a_lib.props.color.ColorTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.a_lib.props.color.ColorTypes"}}]},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"leftAreaWidth","propertyComment":"\n The width of the left drawer. Should be a number value in pixels.\n"}}]},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onToggleLeftArea","propertyComment":"\n\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"pageHeight","propertyComment":"\n Sets the height of the entire page.\n Set to 100% when the content of the central area is less than one screen height.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"topCentralArea","propertyComment":"\n The top central area\n"},"children":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"propertyName":"topCentralAreaCentralSectionElement","propertyComment":"\n Sets the title element in the center of the app bar\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"topCentralAreaCentralSectionPadding","propertyComment":"\n Sets the padding of the central section element of top central area\n","externalProperties":"usr.a_lib.props.padding.PaddingTypes"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"topCentralAreaElevation","propertyComment":"\n Shadow depth of the top central bar.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}],"propertyValue":"0"}},{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"propertyName":"topCentralAreaRightSectionElement","propertyComment":"\n Sets the element in the right-side of the app bar\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"topCentralAreaRightSectionPadding","propertyComment":"\n Sets the padding of the right-side section element of top central area\n","externalProperties":"usr.a_lib.props.padding.PaddingTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"topCentralPalette","propertyComment":"\n Sets the custom color of the top central bar\n"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.a_lib.props.color.ColorTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.a_lib.props.color.ColorTypes"}}]}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"topLeftArea","propertyComment":"\n The top left area.\n"},"children":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"propertyName":"topLeftAreaElement","propertyComment":"\n Sets the element in the top app bar on the left side of the page\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"topLeftAreaElevation","propertyComment":"\n Shadow depth of the top left bar.\n","propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}],"propertyValue":"0"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"topLeftAreaPadding","propertyComment":"\n Sets the padding of the top left area\n","externalProperties":"usr.a_lib.props.padding.PaddingTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"topLeftAreaPalette","propertyComment":"\n Sets the custom color of the top left bar\n"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.a_lib.props.color.ColorTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.a_lib.props.color.ColorTypes"}}]}]}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/inputs/Button.comp.tsx","declarations":[{"componentName":"Button","wcdAnnotations":{"annotationComment":"\n Buttons allow users to take actions, and make choices, with a single tap.\n"},"externalProperties":"usr.inputs.Button.ButtonTypes","defaultProps":{"label":"Button","variant":"contained"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/inputs/Button.props.ts","declarations":[{"name":"ButtonTypes","properties":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"color","propertyComment":"\n The color of the component. It supports those theme colors that make sense for this component.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"default"},{"value":"inherit"},{"value":"primary"},{"value":"secondary"}]}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n If true, the button will be disabled.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"propertyName":"endIcon","propertyComment":"\n An element placed after the button label.\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"fullWidth","propertyComment":"\n If true, the button will take up the full width of its container.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"href","propertyComment":"\n The URL to link to when the button is clicked.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"label","propertyComment":"\n Button label text\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"loading","propertyComment":"\n If true the circular progress is shown and button is disabled.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"menu","propertyComment":"\n A list of the menu items\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n If true, the menu item is disabled\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"href","propertyComment":"\n The URL to link to when the menu item is clicked.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"id","propertyComment":"\n A menu item id\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"label","propertyComment":"\n A menu item label\n"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"selected","propertyComment":"\n If true, the menu item is selected\n"}}]}]},"children":[]},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onClick","propertyComment":"\n Triggered when the user click on the button\n * No arguments\n\n"}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onMenuItemClick","propertyComment":"\n Triggered when the user click on the menu item\n * Arguments:\n    * options: {id: string, url: string}\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"size","propertyComment":"\n The size of the button. `small` is equivalent to the dense button styling.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"small"},{"value":"medium"},{"value":"large"}]}},{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"propertyName":"startIcon","propertyComment":"\n An element placed before the button label.\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"variant","propertyComment":"\n The variant to use.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"text"},{"value":"outlined"},{"value":"contained"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/inputs/ButtonGroupWithButtons.comp.tsx","declarations":[{"componentName":"ButtonGroupWithButtons","wcdAnnotations":{"annotationComment":"\n The ButtonGroup component can be used to group outlined (the default) or contained buttons.\n"},"externalProperties":"usr.inputs.ButtonGroupWithButtons.ButtonGroupWithButtonsTypes","defaultProps":{"buttons":[{"id":"0001","label":"Button1"},{"id":"0002","label":"Button2"},{"id":"0003","label":"Button3"}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/inputs/ButtonGroupWithButtons.props.ts","declarations":[{"name":"ButtonGroupWithButtonsTypes","properties":[{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"buttons","propertyComment":"\n A list of buttons in the group.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"color","propertyComment":"\n The color of the component. It supports those theme colors that make sense for this component.\n","propertyValueVariants":[{"value":""},{"value":"default"},{"value":"inherit"},{"value":"primary"},{"value":"secondary"}],"propertyValue":""}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n If true, the button will be disabled.\n"}},{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"propertyName":"endIcon","propertyComment":"\n An element placed after the button label.\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"href","propertyComment":"\n The URL to link to when the button is clicked. If defined, an a element will be used as the root node.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"id","isRequired":true,"propertyComment":"The unique id of the button"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"label","propertyComment":"\n Button label text\n"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"loading","propertyComment":"\n If true the circular progress is shown and button is disabled.\n"}},{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"propertyName":"startIcon","propertyComment":"\n An element placed before the button label.\n","componentName":"__PlaceHolder"}}]}]},"children":[]},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"fullWidth","propertyComment":"\n If true, the button group will take up the full width of its container.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onClick","propertyComment":"\n Triggered when the user clicks on one of the buttons in the group\n\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"size","propertyComment":"\n The size of the button group. `small` is equivalent to the dense button styling.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"small"},{"value":"medium"},{"value":"large"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"variant","propertyComment":"\n The variant to use.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"text"},{"value":"outlined"},{"value":"contained"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/inputs/Checkbox.comp.tsx","declarations":[{"componentName":"Checkbox","wcdAnnotations":{"annotationComment":"\n Checkboxes allow the user to select one or more items from a set.\n"},"externalProperties":"usr.inputs.Checkbox.CheckboxTypes","defaultProps":{"label":"Checkbox","color":"default"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/inputs/Checkbox.props.ts","declarations":[{"name":"CheckboxTypes","properties":[{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"checked","propertyComment":"\n If true, the component appears selected.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"color","propertyComment":"\n The color of the component. It supports those theme colors that make sense for this component.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"default"},{"value":"primary"},{"value":"secondary"}]}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n If true, the control will be disabled.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"id","propertyComment":"\n The id of the input element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"indeterminate","propertyComment":"\n If true, the component appears indeterminate.\n This does not set the native input element to indeterminate due to inconsistent behavior across browsers.\n However, we set a data-indeterminate attribute on the input.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"label","propertyComment":"\n The text to be used in an enclosing label element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"labelPlacement","propertyComment":"\n The position of the label.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"end"},{"value":"start"},{"value":"top"},{"value":"bottom"}]}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onChange","propertyComment":"\n Fired when the state is changed.\n\n @functionTypes {CheckboxOnChangeTypes}\n"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"required","propertyComment":"\n If true, the input element will be required.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"value","propertyComment":"\n The value of the component.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/inputs/FloatingActionButton.comp.tsx","declarations":[{"componentName":"FloatingActionButton","wcdAnnotations":{"annotationComment":"\n A floating action button (FAB) performs the primary, or most common, action on a screen.\n"},"externalProperties":"usr.inputs.FloatingActionButton.FloatingActionButtonTypes","defaultProps":{}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/inputs/FloatingActionButton.props.ts","declarations":[{"name":"FloatingActionButtonTypes","properties":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"color","propertyComment":"\n The color of the component. It supports those theme colors that make sense for this component.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"default"},{"value":"inherit"},{"value":"primary"},{"value":"secondary"}]}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n If true, the button will be disabled.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"href","propertyComment":"\n The URL to link to when the button is clicked. If defined, an a element will be used as the root node.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"propertyName":"icon","propertyComment":"\n An icon placed as a child of the button.\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"label","propertyComment":"\n Button label text\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"loading","propertyComment":"\n If true the circular progress is shown and button is disabled.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onClick","propertyComment":"\n Triggered when the user click on the button\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"size","propertyComment":"\n The size of the button. `small` is equivalent to the dense button styling.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"small"},{"value":"medium"},{"value":"large"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"variant","propertyComment":"\n The variant to use.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"round"},{"value":"extended"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/inputs/IconButton.comp.tsx","declarations":[{"componentName":"IconButton","wcdAnnotations":{"annotationComment":"\n Icon buttons are commonly found in app bars and toolbars.\n\n Icons are also appropriate for toggle buttons that allow a single choice to be selected or deselected,\n such as adding or removing a star to an item.\n"},"externalProperties":"usr.inputs.IconButton.IconButtonTypes","defaultProps":{"icon":{},"onClick":null}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/inputs/IconButton.props.ts","declarations":[{"name":"IconButtonTypes","properties":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"color","propertyComment":"\n The color of the component. It supports those theme colors that make sense for this component.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"default"},{"value":"inherit"},{"value":"primary"},{"value":"secondary"}]}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n If true, the button will be disabled.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"edge","propertyComment":"\n If given, uses a negative margin to counteract the padding on one side\n (this is often helpful for aligning the left or right side of the icon with content above or below,\n without ruining the border size and shape).\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"start"},{"value":"end"},{"value":"false"}]}},{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"propertyName":"icon","propertyComment":"\n Icon\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"loading","propertyComment":"\n If true the circular progress is shown and button is disabled.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onClick","propertyComment":"\n Triggered when the user click on the button\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"size","propertyComment":"\n The size of the button. `small` is equivalent to the dense button styling.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"small"},{"value":"medium"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/inputs/NumberField.comp.tsx","declarations":[{"componentName":"NumberField","wcdAnnotations":{"annotationComment":"\n Number field lets users enter and edit numbers.\n"},"externalProperties":"usr.inputs.NumberField.NumberFieldTypes","defaultProps":{"debounceDelay":300,"formControl":{"margin":"none"}}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/inputs/NumberField.props.ts","declarations":[{"name":"NumberFieldTypes","properties":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"debounceDelay","propertyComment":"\n Is used to ignore all value changes until the changes have stopped for a specified delay in milliseconds.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n If true, the input element will be disabled.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"error","propertyComment":"\n If true, the label will be displayed in an error state.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"formControl","propertyComment":"\n Properties specific to the MUI form control\n"},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"color","propertyComment":"\n The color of the component. It supports those theme colors that make sense for this component.\n","propertyValueVariants":[{"value":""},{"value":"primary"},{"value":"secondary"}],"propertyValue":""}},{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"propertyName":"endAdornment","propertyComment":"\n A component placed after the input control.\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"fullWidth","propertyComment":"\n If true, the input will take up the full width of its container.\n"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"margin","propertyComment":"\n If dense or normal, will adjust vertical spacing of this and contained components.\n","propertyValueVariants":[{"value":"none"},{"value":"dense"},{"value":"normal"}],"propertyValue":"none"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"placeholder","propertyComment":"\n The short hint displayed in the input before the user enters a value.\n"}},{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"propertyName":"startAdornment","propertyComment":"\n A component placed before the input control.\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"variant","propertyComment":"\n The variant to use.\n","propertyValueVariants":[{"value":"standard"},{"value":"outlined"},{"value":"filled"}],"propertyValue":"standard"}}]},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"helperText","propertyComment":"\n The helper text content.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"inputControl","propertyComment":"\n Properties of the input control specification\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"autoComplete","propertyComment":"\n This prop helps users to fill forms faster, especially on mobile devices.\n The name can be confusing, as it's more like an autofill.\n"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"autoFocus","propertyComment":"\n If true, the input element will be focused during the first mount.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"id","propertyComment":"\n The id of the input element.\n Use this prop to make label and helperText accessible for screen readers.\n"}}]},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"label","propertyComment":"\n The label text.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onChange","propertyComment":"\n Triggered when the value is changed in the input control.\n Use handler: `handleOnChange(value: number)`\n"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"required","propertyComment":"\n If true, the label is displayed as required and the input element` will be required.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"value","propertyComment":"\n The value of the input element.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/inputs/RadioGroupWithItems.comp.tsx","declarations":[{"componentName":"RadioGroupWithItems","wcdAnnotations":{"annotationComment":"\n Radio buttons allow the user to select one option from a set.\n Use radio buttons when the user needs to see all available options.\n If available options can be collapsed, consider using a dropdown menu because it uses less space.\n"},"externalProperties":"usr.inputs.RadioGroupWithItems.RadioGroupWithItemsTypes","defaultProps":{"items":[{"label":"Orange","value":"orange","labelPlacement":"end","color":"default"},{"label":"Green","value":"green","labelPlacement":"end","color":"default"},{"label":"Blue","value":"blue","labelPlacement":"end","color":"default"}],"row":true,"selectedValue":"Green"}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/inputs/RadioGroupWithItems.props.ts","declarations":[{"name":"RadioGroupWithItemsTypes","properties":[{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"items","propertyComment":"\n Radio buttons\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"color","propertyComment":"\n The color of the component. It supports those theme colors that make sense for this component.\n","propertyValueVariants":[{"value":""},{"value":"default"},{"value":"primary"},{"value":"secondary"}],"propertyValue":""}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n If true, the control will be disabled.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"label","propertyComment":"\n Input label text.\n"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"required","propertyComment":"\n If true, the input element will be required.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"value","propertyComment":"\n The value of the input component.\n"}}]}]},"children":[]},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"labelPlacement","propertyComment":"\n The position of the label.\n","propertyValue":null,"propertyValueVariants":[{"value":"end"},{"value":"start"},{"value":"top"},{"value":"bottom"}]}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"loading","propertyComment":"\n If true the circular progress is shown and button is disabled.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onChange","propertyComment":"\n Submits the entered value\n\n"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"row","propertyComment":"\n Display group of elements in a compact row.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"selectedValue","propertyComment":"\n Value of the selected radio button.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"size","propertyComment":"\n The size of the radio. small is equivalent to the dense radio styling\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"medium"},{"value":"small"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/layout/Box.comp.tsx","declarations":[{"componentName":"Box","wcdAnnotations":{"annotationComment":"\n The Box component serves as a wrapper component for most of the CSS utility needs.\n"},"externalProperties":"usr.layout.Box.BoxTypes","defaultProps":{"display":{"display":"flex"},"sizing":{"width":"100%"},"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/layout/Box.props.ts","declarations":[{"name":"BoxTypes","properties":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borders","propertyComment":"Sets style to element's border","externalProperties":"usr.a_lib.props.borders.BordersTypes"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"boxShadow","propertyComment":"\n Shadow depth. It accepts values between 0 and 24 inclusive.\n","propertyValue":null,"propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"},{"value":"13"},{"value":"14"},{"value":"15"},{"value":"16"},{"value":"17"},{"value":"18"},{"value":"19"},{"value":"20"},{"value":"21"},{"value":"22"},{"value":"23"},{"value":"24"}]}},{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"children","propertyComment":"\n The content of the box.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"display","propertyComment":"Toggle the display value of components","externalProperties":"usr.a_lib.props.display.DisplayTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"flexbox","propertyComment":"\n Manages the layout, alignment, and sizing of grid columns, navigation, components,\n and more with a full suite of responsive Flexbox utilities.\n","externalProperties":"usr.a_lib.props.flexbox.FlexboxTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"palette","propertyComment":"Sets the color of the component"},"children":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"backgroundColor","externalProperties":"usr.a_lib.props.color.ColorTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"color","externalProperties":"usr.a_lib.props.color.ColorTypes"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"positions","propertyComment":"\n Shorthand utilities for quickly configuring the position of an element.\n","externalProperties":"usr.a_lib.props.positions.PositionsTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"sizing","propertyComment":"\n Easily make an element as wide or as tall (relative to its parent) with the width and height utilities.\n","externalProperties":"usr.a_lib.props.sizing.SizingTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"spacing","propertyComment":"\n A range of shorthand responsive margin and padding utility classes to modify an element’s appearance.\n","externalProperties":"usr.a_lib.props.spacing.SpacingTypes"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"typography","propertyComment":"Text utilities to control alignment, wrapping, weight, and more.","externalProperties":"usr.a_lib.props.typography.TypographyTypes"}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/layout/Container.props.ts","declarations":[{"name":"ContainerTypes","properties":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"propertyName":"centralAreaElement","propertyComment":"\n The content of the container\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"centralAreaPadding","propertyComment":"\n Container central area padding\n","externalProperties":"usr.a_lib.props.padding.PaddingTypes"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disableMaxWidth","propertyComment":"\n Set disableMaxWidth to true to disable maxWidth.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"fixed","propertyComment":"\n Set the max-width to match the min-width of the current breakpoint.\n This is useful if you'd prefer to design for a fixed set of sizes instead of trying to\n accommodate a fully fluid viewport.\n It's fluid by default.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n Determine the max-width of the container.\n The container width grows with the size of the screen.\n Set disableMaxWidth to true to disable maxWidth.\n","propertyValue":null,"propertyValueVariants":[{"value":"xs"},{"value":"sm"},{"value":"md"},{"value":"lg"},{"value":"xl"}]}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"outerMargins","propertyComment":"\n Container outer margins\n","externalProperties":"usr.a_lib.props.margin.MarginTypes"}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/layout/Container.comp.tsx","declarations":[{"componentName":"Container","wcdAnnotations":{"annotationComment":"\n _From Material UI documentation_\n\n The container centers your content horizontally. It's the most basic layout element.\n * A fluid container width is bounded by that `maxWidth` property value.\n * If you prefer to design for a fixed set of sizes instead of trying to accommodate a fully fluid viewport, you can set the `fixed` property. The max-width matches the min-width of the current breakpoint.\n"},"externalProperties":"usr.layout.Container.ContainerTypes","defaultProps":{"fixed":false,"maxWidth":"lg","disableMaxWidth":false,"centralAreaElement":{}}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/layout/DivWithStyle.comp.tsx","declarations":[{"componentName":"DivWithStyle","wcdAnnotations":{"annotationComment":"\n StyledDiv is used in case when the theme styles are not enough.\n It is recommended to use it for complex layouts mostly.\n"},"externalProperties":"usr.layout.DivWithStyle.DivWithStyleTypes","defaultProps":{"style":{"display":"flex"},"children":[{}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/layout/DivWithStyle.props.ts","declarations":[{"name":"DivWithStyleTypes","properties":[{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"children","propertyComment":"\n  An array of the placeholders for child components.\n  Increase array size to put more items.\n","defaultChildren":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"componentName":"__PlaceHolder"}}]},"children":[]},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"style","propertyComment":"\n Inline styles of the component. The object is used as a style property of the div component.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/layout/GridWithCells.comp.tsx","declarations":[{"componentName":"GridWithCells","wcdAnnotations":{},"externalProperties":"usr.layout.GridWithCells.GridWithCellsTypes","defaultProps":{"spacing":"0","alignContent":"stretch","alignItems":"stretch","direction":"row","justify":"flex-start","wrap":"nowrap","cells":[{"child":{},"lg":"false","md":"false","sm":"false","xl":"false","xs":"auto","zeroMinWidth":false}]}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/layout/GridWithCells.props.ts","declarations":[{"name":"GridWithCellsTypes","properties":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"Defines the align-content style property. It's applied for all screen sizes.","propertyValue":null,"propertyValueVariants":[{"value":"stretch"},{"value":"center"},{"value":"flex-start"},{"value":"flex-end"},{"value":"space-between"},{"value":"space-around"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"Defines the align-items style property. It's applied for all screen sizes.","propertyValue":null,"propertyValueVariants":[{"value":"flex-start"},{"value":"center"},{"value":"flex-end"},{"value":"stretch"},{"value":"baseline"}]}},{"type":"COMPONENT_PROPERTY_ARRAY_OF_TYPE","props":{"propertyName":"cells","propertyComment":"A list of the cells in the grid.","defaultChildren":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{},"children":[{"type":"COMPONENT_PROPERTY_ELEMENT_TYPE","props":{"propertyName":"child","propertyComment":"Place here a component","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"lg","propertyComment":"\n Defines the number of grids the component is going to use.\n It's applied for the lg breakpoint and wider screens if not overridden.\n","propertyValueVariants":[{"value":"false"},{"value":"auto"},{"value":"true"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"}],"propertyValue":"false"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"md","propertyComment":"\n Defines the number of grids the component is going to use.\n It's applied for the md breakpoint and wider screens if not overridden.\n","propertyValueVariants":[{"value":"false"},{"value":"auto"},{"value":"true"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"}],"propertyValue":"false"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"sm","propertyComment":"\n Defines the number of grids the component is going to use.\n It's applied for the sm breakpoint and wider screens if not overridden.\n","propertyValueVariants":[{"value":"false"},{"value":"auto"},{"value":"true"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"}],"propertyValue":"false"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"xl","propertyComment":"\n Defines the number of grids the component is going to use.\n It's applied for the xl breakpoint and wider screens if not overridden.\n","propertyValueVariants":[{"value":"false"},{"value":"auto"},{"value":"true"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"}],"propertyValue":"false"}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"xs","propertyComment":"\n Defines the number of grids the component is going to use.\n It's applied for the xs breakpoint and wider screens if not overridden.\n","propertyValueVariants":[{"value":"false"},{"value":"auto"},{"value":"true"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"},{"value":"11"},{"value":"12"}],"propertyValue":"false"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"zeroMinWidth","propertyComment":"If true, it sets min-width: 0 on the item."}}]}]},"children":[]},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"direction","propertyComment":"Defines the flex-direction style property. It is applied for all screen sizes.","propertyValue":null,"propertyValueVariants":[{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justify","propertyComment":"Defines the justify-content style property. It is applied for all screen sizes.","propertyValue":null,"propertyValueVariants":[{"value":"flex-start"},{"value":"center"},{"value":"flex-end"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"spacing","propertyComment":"\n Defines the space between the type item component.\n","propertyValue":null,"propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"wrap","propertyComment":"Defines the flex-wrap style property. It's applied for all screen sizes.","propertyValue":null,"propertyValueVariants":[{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/surfaces/ExpansionPanel.comp.tsx","declarations":[{"componentName":"ExpansionPanel","wcdAnnotations":{"annotationComment":"\n _From Material UI documentation_\n\n # Expansion Panel\n\n  Expansion panels contain creation flows and allow lightweight editing of an element.\n\n  An expansion panel is a lightweight container that may either stand alone or be connected to a larger surface, such as a card.\n\n **Note:** Expansion panels are no longer documented in the [Material Design guidelines](https://material.io/), but Material-UI will continue to support them.\n\n ## Simple Expansion Panel\n\n  ## Controlled Accordion\n\n Extend the default panel behavior to create an accordion with the `ExpansionPanel` component.\n\n ## Customized expansion panels\n\n Here is an example of customizing the component. You can learn more about this in the\n  [overrides documentation page](/customization/components/).\n\n {{\"demo\": \"pages/components/expansion-panels/CustomizedExpansionPanels.js\"}}\n\n  ## Additional actions\n\n  In order to put an action such as a `Checkbox` or a button inside of the `ExpansionPanelSummary`, you need to stop the propagation of the focus and click events to prevent the panel from\n expanding/collapsing when using the action.\n You should also provide an `aria-label` for the action, otherwise the label of the nested action will be included in\n the label of the parent button that controls the panel expansion.\n\n {{\"demo\": \"pages/components/expansion-panels/ActionsInExpansionPanelSummary.js\", \"bg\": true}}\n\n ## Performance\n\n The content of ExpansionPanels is mounted by default even if the panel is not expanded.\n This default behavior has server-side rendering and SEO in mind.\n If you render expensive component trees inside your panels or simply render many\n  panels it might be a good idea to change this default behavior by enabling the\n `unmountOnExit` in `TransitionProps`:\n\n ```jsx\n <ExpansionPanel TransitionProps={{ unmountOnExit: true }} />\n ```\n\n As with any performance optimization this is not a silver bullet. Be sure to identify\n  bottlenecks first and then try out these optimization strategies.\n\n  ## Secondary heading and Columns\n\n  Multiple columns can be used to structure the content, and a helper text may be added to the panel to assist the user.\n\n  {{\"demo\": \"pages/components/expansion-panels/DetailedExpansionPanel.js\", \"bg\": true}}\n\n ## Accessibility\n\n (WAI-ARIA: https://www.w3.org/TR/wai-aria-practices/#accordion)\n\n For optimal accessibility we recommend setting `id` and `aria-controls` on the\n `ExpansionPanelSummary`. The `ExpansionPanel` will derive the necessary `aria-labelledby`\n  and `id` for the content region of the panel.\n"},"externalProperties":"usr.surfaces.ExpansionPanel.ExpansionPanelTypes","defaultProps":{"defaultExpanded":false}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"},{"filePath":"DEMO/src/usr/surfaces/ExpansionPanel.props.ts","declarations":[{"name":"ExpansionPanelTypes","properties":[{"type":"COMPONENT_PROPERTY_NODE_TYPE","props":{"propertyName":"children","propertyComment":"\n The content of the expansion panel.\n","componentName":"__PlaceHolder"}},{"type":"COMPONENT_PROPERTY_OBJECT_TYPE","props":{"propertyName":"classes","propertyComment":"\n \tOverride or extend the styles applied to the component. See CSS API below for more details.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"defaultExpanded","propertyComment":"\n If true, expands the panel by default.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"disabled","propertyComment":"\n \tIf true, the panel will be displayed in a disabled state.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"expanded","propertyComment":"\n If true, expands the panel, otherwise collapse it. Setting this prop enables control over the panel.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_FUNCTION_TYPE","props":{"propertyName":"onChange","propertyComment":"\n \tCallback fired when the expand/collapse state is changed.\n\n     Signature:\n     function(event: object, expanded: boolean) => void\n     event: The event source of the callback.\n     expanded: The expanded state of the panel.\n"}},{"type":"COMPONENT_PROPERTY_BOOL_TYPE","props":{"propertyName":"square","propertyComment":"\n \tIf true, rounded corners are disabled.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/borders.props.ts","declarations":[{"name":"BordersTypes","properties":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"border","propertyComment":"\n The border-width CSS property sets the width of an element's border.\n When the value is specified, it applies the same width to all four sides.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderBottom","propertyComment":"The border-bottom-width CSS property sets the width of the bottom border of an element.","propertyValue":null}},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"borderColor","propertyComment":"The border-color CSS property sets the color of an element's border.","externalProperties":"usr.a_lib.props.color.ColorTypes"}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderLeft","propertyComment":"The border-left-width CSS property sets the width of the left border of an element.","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"borderRadius","propertyComment":"\n The border-radius CSS property rounds the corners of an element's outer border edge.\n You can set a single radius to make circular corners, or two radii to make elliptical corners.\n Use a string value of the border radius to set units: 10% 30% 50% 70%\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderRight","propertyComment":"The border-right-width CSS property sets the width of the right border of an element.","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"borderTop","propertyComment":"The border-top-width CSS property sets the width of the top border of an element","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/color.props.ts","declarations":[{"name":"ColorTypes","properties":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorHue","propertyComment":"A value from the collection of colors, i.e. hues","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"primary.main"},{"value":"primary.light"},{"value":"primary.dark"},{"value":"primary.contrastText"},{"value":"secondary.main"},{"value":"secondary.light"},{"value":"secondary.dark"},{"value":"secondary.contrastText"},{"value":"error.main"},{"value":"text.primary"},{"value":"text.secondary"},{"value":"text.disabled"},{"value":"text.hint"},{"value":"white"},{"value":"black"},{"value":"red"},{"value":"pink"},{"value":"purple"},{"value":"deepPurple"},{"value":"indigo"},{"value":"blue"},{"value":"lightBlue"},{"value":"cyan"},{"value":"teal"},{"value":"green"},{"value":"lightGreen"},{"value":"lime"},{"value":"yellow"},{"value":"amber"},{"value":"orange"},{"value":"deepOrange"},{"value":"brown"},{"value":"grey"},{"value":"blueGrey"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"colorShade","propertyComment":"A value from the collection of colors shades","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"50"},{"value":"100"},{"value":"200"},{"value":"300"},{"value":"400"},{"value":"500"},{"value":"600"},{"value":"700"},{"value":"800"},{"value":"900"},{"value":"A100"},{"value":"A200"},{"value":"A400"},{"value":"A700"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/display.props.ts","declarations":[{"name":"DisplayTypes","properties":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"display","propertyComment":"\n The display CSS property sets whether an element is treated as\n a block or inline element and the layout used for its children,\n such as flow layout, grid or flex.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"block"},{"value":"flex"},{"value":"flow"},{"value":"inline"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"overflow","propertyComment":"\n The overflow shorthand CSS property sets what to do when\n an element's content is too big to fit in its block formatting context.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"auto"},{"value":"hidden"},{"value":"scroll"},{"value":"visible"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textOverflow","propertyComment":"\n The text-overflow CSS property sets how hidden overflow content is signaled to users.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"clip"},{"value":"ellipsis"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"visibility","propertyComment":"\n The visibility CSS property shows or hides an element without changing the layout of a document.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"hidden"},{"value":"visible"},{"value":"collapse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"whiteSpace","propertyComment":"\n The white-space CSS property sets how white space inside an element is handled.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"normal"},{"value":"nowrap"},{"value":"pre"},{"value":"pre-wrap"},{"value":"pre-line"},{"value":"break-spaces"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/img.props.ts","declarations":[{"name":"ImgTypes","properties":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"alt","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"crossorigin","propertyValue":null,"propertyValueVariants":[{"value":"anonymous"},{"value":"use-credentials"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"height","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"src","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"width","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/flexbox.props.ts","declarations":[{"name":"FlexboxTypes","properties":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignContent","propertyComment":"\n The CSS align-content property sets the distribution of space between\n and around content items along a flexbox's cross-axis.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignItems","propertyComment":"\n The CSS align-items property sets the align-self value on all direct children as a group.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"alignSelf","propertyComment":"\n The align-self CSS property overrides a grid or flex item's align-items value.\n In Flexbox, it aligns the item on the cross axis.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"auto"},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"baseline"},{"value":"normal"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"flex","propertyComment":"\n The flex CSS property sets how a flex item will grow or shrink to fit the space available in its flex container.\n It is a shorthand for flex-grow, flex-shrink, and flex-basis.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexDirection","propertyComment":"\n The flex-direction CSS property sets how flex items are placed\n in the flex container defining the main axis and the direction (normal or reversed).\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"row"},{"value":"row-reverse"},{"value":"column"},{"value":"column-reverse"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexGrow","propertyComment":"\n The flex-grow CSS property sets the flex grow factor of a flex item main size.\n It specifies how much of the remaining space in the flex container should be assigned to the item\n (the flex grow factor).\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"flexShrink","propertyComment":"\n The flex-shrink CSS property sets the flex shrink factor of a flex item.\n If the size of all flex items is larger than the flex container,\n items shrink to fit according to flex-shrink.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"flexWrap","propertyComment":"\n The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"nowrap"},{"value":"wrap"},{"value":"wrap-reverse"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"justifyContent","propertyComment":"\n The CSS justify-content property defines how the browser distributes space between and around content\n items along the main-axis of a flex container, and the inline axis of a container.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"center"},{"value":"start"},{"value":"end"},{"value":"flex-start"},{"value":"flex-end"},{"value":"left"},{"value":"right"},{"value":"normal"},{"value":"space-between"},{"value":"space-around"},{"value":"space-evenly"},{"value":"stretch"}]}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"order","propertyComment":"\n The order CSS property sets the order to lay out an item in a flex or grid container.\n Items in a container are sorted by ascending order value and then by their source code order.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/margin.props.ts","declarations":[{"name":"MarginTypes","properties":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/padding.props.ts","declarations":[{"name":"PaddingTypes","properties":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/sizing.props.ts","declarations":[{"name":"SizingTypes","properties":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"height","propertyComment":"\n The height CSS property specifies the height of an element.\n By default, the property defines the height of the content area.\n Use a string value to specify units: 50%\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxHeight","propertyComment":"\n The max-height CSS property sets the maximum height of an element.\n It prevents the used value of the height property from becoming larger than the value specified for max-height.\n Use a string value to specify units: 50%\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"maxWidth","propertyComment":"\n The max-width CSS property sets the maximum width of an element.\n It prevents the used value of the width property from becoming larger than the value specified by max-width.\n Use a string value to specify units: 50%\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minHeight","propertyComment":"\n The min-height CSS property sets the minimum height of an element.\n It prevents the used value of the height property from becoming smaller than the value specified for min-height.\n Use a string value to specify units: 50%\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"minWidth","propertyComment":"\n The min-width CSS property sets the minimum width of an element.\n It prevents the used value of the width property from becoming smaller than the value specified for min-width.\n Use a string value to specify units: 50%\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"width","propertyComment":"\n The width CSS property sets an element's width. By default, it sets the width of the content area.\n Use a string value to specify units: 50%\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/positions.props.ts","declarations":[{"name":"BoxPositionsTypes","properties":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n References to the MUI theme zIndex values. See the application settings.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"mobileStepper"},{"value":"speedDial"},{"value":"appBar"},{"value":"drawer"},{"value":"modal"},{"value":"snackbar"},{"value":"tooltip"}]}}]},{"name":"PositionsTypes","properties":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"bottom","propertyComment":"\n The bottom CSS property participates in setting the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"left","propertyComment":"\n The left CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"position","propertyComment":"\n The position CSS property sets how an element is positioned in a document.\n The top, right, bottom, and left properties determine the final location of positioned elements.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"static"},{"value":"relative"},{"value":"absolute"},{"value":"sticky"},{"value":"fixed"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"right","propertyComment":"\n The right CSS property participates in specifying the horizontal position of a positioned element.\n It has no effect on non-positioned elements.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"top","propertyComment":"\n The top CSS property participates in specifying the vertical position of a positioned element.\n It has no effect on non-positioned elements.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"zIndex","propertyComment":"\n The z-index CSS property sets the z-order of a positioned element and its descendants or flex items.\n Overlapping elements with a larger z-index cover those with a smaller one.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/spacing.props.ts","declarations":[{"name":"SpacingTypes","properties":[{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"marginSpacing","propertyComment":"\n A group of the margin properties\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"margin","propertyComment":"\n The property sets the margin area.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginBottom","propertyComment":"\n The property sets the margin area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginLeft","propertyComment":"\n The property sets the margin area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginRight","propertyComment":"\n The property sets the margin area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginTop","propertyComment":"\n The property sets the margin area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginX","propertyComment":"\n The property sets the margin area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"marginY","propertyComment":"\n The property sets the margin area on the top and bottom sides of an element.\n"}}]},{"type":"COMPONENT_PROPERTY_SHAPE_TYPE","props":{"propertyName":"paddingSpacing","propertyComment":"\n A group of the padding properties.\n Depending on the input and the theme configuration, the following transformation is applied:\n (1) number - the property is multiplied by the theme spacing value,\n (2) number - the property is used as the array index in theme spacing array,\n (3) string - the property is passed as raw CSS value\n"},"children":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingX","propertyComment":"\n The property sets the padding area on the left and right sides of an element.\n"}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingY","propertyComment":"\n The property sets the padding area on the top and bottom sides of an element.\n"}}]}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/spacingByTheme.props.js","declarations":[{"name":"PaddingSpacingByThemeTypes","properties":[{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element. The property is multiplied by the theme spacing value.\n","propertyValue":null,"propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element. The property is multiplied by the theme spacing value.\n","propertyValue":null,"propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element. The property is multiplied by the theme spacing value.\n","propertyValue":null,"propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element. The property is multiplied by the theme spacing value.\n","propertyValue":null,"propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element. The property is multiplied by the theme spacing value.\n","propertyValue":null,"propertyValueVariants":[{"value":"0"},{"value":"1"},{"value":"2"},{"value":"3"},{"value":"4"},{"value":"5"},{"value":"6"},{"value":"7"},{"value":"8"},{"value":"9"},{"value":"10"}]}}]},{"name":"PaddingTypes","properties":[{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"padding","propertyComment":"\n The property sets the padding area on all four sides of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingBottom","propertyComment":"\n The property sets the padding area on the bottom of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingLeft","propertyComment":"\n The property sets the padding area on the left side of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingRight","propertyComment":"\n The property sets the padding area on the right side of an element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"paddingTop","propertyComment":"\n The property sets the padding area on the top of an element.\n","propertyValue":null}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/a_lib/props/typography.props.ts","declarations":[{"name":"TypographyTypes","properties":[{"type":"COMPONENT_PROPERTY_NUMBER_TYPE","props":{"propertyName":"fontSize","propertyComment":"\n The font-size CSS property sets the size of the font.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontStyle","propertyComment":"\n The font-style CSS property sets whether a font should be styled with a normal, italic.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"normal"},{"value":"italic"}]}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"fontWeight","propertyComment":"\n Sets the weight (or boldness) of the font according to the application settings.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"fontWeightLight"},{"value":"fontWeightRegular"},{"value":"fontWeightMedium"},{"value":"fontWeightBold"}]}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"letterSpacing","propertyComment":"\n The letter-spacing CSS property sets the spacing behavior between text characters.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_STRING_TYPE","props":{"propertyName":"lineHeight","propertyComment":"\n The line-height CSS property sets the height of a line box.\n It's commonly used to set the distance between lines of text.\n On block-level elements, it specifies the minimum height of line boxes within the element.\n","propertyValue":null}},{"type":"COMPONENT_PROPERTY_ONE_OF_TYPE","props":{"propertyName":"textAlign","propertyComment":"\n The text-align CSS property sets the horizontal alignment of a block element or table-cell box.\n","propertyValue":null,"propertyValueVariants":[{"value":""},{"value":"start"},{"value":"end"},{"value":"left"},{"value":"right"},{"value":"center"},{"value":"justify"},{"value":"match-parent"}]}}]}],"resourceType":"RESOURCE_IN_PROP_TYPES_TYPE"},{"filePath":"DEMO/src/usr/page/PageFrameWithDrawer.comp.tsx","declarations":[{"componentName":"PageFrameWithDrawer","wcdAnnotations":{},"externalProperties":"usr.page.PageFrameWithDrawer.PageFrameWithDrawerTypes","defaultProps":{"topLeftArea":{"topLeftAreaElevation":"1","topLeftAreaElement":{}},"topCentralArea":{"topCentralAreaElevation":"1"},"leftArea":{"leftAreaWidth":250,"leftAreaElement":{}},"centralArea":{"centralAreaElement":{}},"actionArea":{"actionAreaElement":null}}}],"resourceType":"RESOURCE_IN_COMPONENTS_TYPE"}]
